apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

ext {
    PUBLISH_GROUP_ID = 'com.graceens.foresee'
    PUBLISH_VERSION = rootProject.ext.storageVersion
    PUBLISH_ARTIFACT_ID = 'storage'
    PUBLISH_DESCRIPTION = 'android data persistence storage library'
    PUBLISH_WEBSITE = 'https://github.com/graceens/Storage'
    PUBLISH_GIT = 'git@github.com:graceens/Storage.git'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin('com.android.library')) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
//        from sourceSets.main.java.srcDirs
//        from sourceSets.main.kotlin.srcDirs
    }
}

//tasks.withType(dokkaHtmlPartial.getClass()).configureEach{
//    pluginsMapConfiguration.set(
//            ['org.jetbrains.dokka.base.DokkaBase': '{ "separateInheritedMembers": true }']
//    )
//}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Two artifacts, the 'aar' (or 'jar') and the sources
                if (project.plugins.findPlugin('com.android.library')) {
                    from components.release
                } else {
//                    from components.java
                }

                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = PUBLISH_DESCRIPTION
                    url = PUBLISH_WEBSITE

                    licenses {
                        license {
                            name = "The Apache Software License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    developers {
                        developer {
                            id = 'grace'
                            name = 'grace'
                            email = 'graceenszhang@gmail.com'
                        }
                    }

                    scm {
                        connection = PUBLISH_GIT
                        developerConnection = PUBLISH_GIT
                        url = PUBLISH_WEBSITE
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext['signing.keyId'],
            rootProject.ext['signing.key'],
            rootProject.ext['signing.password']
    )
    sign publishing.publications
}